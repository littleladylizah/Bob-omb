<project name="bob-omb" default="enhance-war" basedir=".">

  <!-- Targets and properties for getting the App Engine SDK -->

  <property name="sdk.name"    value="appengine-java-sdk" />
  <property name="sdk.version" value="1.6.2.1" />
  <property name="sdk.dir"     value="${sdk.name}-${sdk.version}" />
  <property name="sdk.archive" value="${sdk.dir}.zip" />

  <property name="sdk.url"
           value="http://googleappengine.googlecode.com/files/${sdk.archive}" />
  <property name="sdk.sha1"
           value="3619061b49df75d71f0ab854da7ec930f007036c" />

  <target name="check-sdk"
      description="Checks if the SDKs directory already exists">
    <echo message="Checking if ./${sdk.dir}/ already exists" />
    <condition property="have.sdk">
      <available file="${sdk.dir}" type="dir" />
    </condition>
  </target>

  <target name="get-sdk" depends="check-sdk" unless="have.sdk"
      description="Downloads (if necessary), checksums and unpacks the SDK">
    <echo message="Downloading the SDK - this will take some time" />
    <get src="${sdk.url}" dest="${sdk.archive}" skipexisting="true" />
    <echo message="Checking SDK checksum" />
    <local name="checksum.ok" />
    <local name="checksum.fail" />
    <checksum   file="${sdk.archive}"
           algorithm="sha"
            property="${sdk.sha1}"
      verifyProperty="checksum.ok" />
    <condition property="checksum.fail">
      <equals arg1="${checksum.ok}" arg2="false" />
    </condition>
    <fail if="checksum.fail" message="${sdk.archive} has an invalid checksum" />
    <unzip src="${sdk.archive}" dest="${basedir}" />
  </target>


  <!-- Define the classpath -->

  <path id="project.classpath">
    <pathelement path="war/WEB-INF/classes" />
    <fileset dir="war/WEB-INF/lib">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${sdk.dir}/lib">
      <include name="shared/**/*.jar" />
    </fileset>
  </path>


  <!-- Copy the App Engine JARs to the WAR -->

  <target name="copyjars" depends="get-sdk"
      description="Copies the App Engine JARs to the WAR">
    <copy todir="war/WEB-INF/lib"
        flatten="true">
      <fileset dir="${sdk.dir}/lib/user">
        <include name="**/*.jar" />
      </fileset>
    </copy>
  </target>


  <!-- Compile the source code into war/WEB-INF/classes directory -->

  <target name="compile" depends="copyjars, clean"
      description="Compiles Java source and copies other source files to the WAR">
    <mkdir dir="war/WEB-INF/classes" />
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
    <javac classpathref="project.classpath"
      includeantruntime="false"
                 srcdir="src"
                destdir="war/WEB-INF/classes" />
  </target>


  <!-- Targets to run from sdk.xml -->

  <target name="runserver" depends="enhance-war"
      description="Starts the development server">
    <ant antfile="sdk.xml" target="runserver" />
  </target>

  <target name="update" depends="enhance-war"
      description="Uploads the application to App Engine">
    <ant antfile="sdk.xml" target="update" />
  </target>

  <target name="rollback" depends="enhance-war"
      description="Rolls back an interrupted application update">
    <ant antfile="sdk.xml" target="rollback" />
  </target>

  <target name="request-logs"
      description="Download logs from App Engine">
    <ant antfile="sdk.xml" target="request-logs" />
  </target>

  <target name="enhance-war" depends="compile"
      description="DataNucleus ORM enhancer">
    <ant antfile="sdk.xml" target="enhance-war" />
  </target>


  <!-- Clean build directory -->

  <target name="clean" description="Deletes compiled source code">
    <delete dir="war/WEB-INF/classes" />
  </target>

</project>
